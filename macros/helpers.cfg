#####################################################################
[gcode_macro _MSG] ; write to operator macro.
; send different messages to console and display (16 chars) or CC 
; same MSG to both channels
#####################################################################

gcode:
  {% set prefix = params.PREFIX|default('') %}
  {% set msg    = params.MSG|default('') %}

  RESPOND PREFIX={prefix} MSG="{msg}"
  M117 {msg}

#####################################################################
[delayed_gcode _CLEARMSG] 
; tidy up and clear M117 LCD display message line after n-seconds
; use: insert after M117 - UPDATE_DELAYED_GCODE ID=_CLEARLCD DURATION=4
#####################################################################
gcode:
  M117

  
#####################################################################
[gcode_macro _CLIENT_LINEAR_MOVE] ; fluidd macro to reduce console noise
#####################################################################

description: Linear move with save and restore of the gcode state
gcode:
  {% set x_move = "X" ~ params.X if params.X is defined else "" %}
  {% set y_move = "Y" ~ params.Y if params.Y is defined else "" %}
  {% set z_move = "Z" ~ params.Z if params.Z is defined else "" %}
  {% set e_move = "E" ~ params.E if params.E is defined else "" %}
  {% set rate = "F" ~ params.F if params.F is defined else "" %}
  {% set ABSOLUTE = params.ABSOLUTE | default(0) | int != 0 %}
  {% set ABSOLUTE_E = params.ABSOLUTE_E | default(0) | int != 0 %}
  SAVE_GCODE_STATE NAME=_client_movement
  {% if x_move or y_move or z_move %}
    G9{ 0 if ABSOLUTE else 1 }
  {% endif %}
  {% if e_move %}
    M8{ 2 if ABSOLUTE_E else 3 }
  {% endif %}
  G1 { x_move } { y_move } { z_move } { e_move } { rate }
  RESTORE_GCODE_STATE NAME=_client_movement

#####################################################################
[gcode_macro BACKUP] ; backup klipper config directory to GIT Hub
#####################################################################
; https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github

gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg
    
[gcode_shell_command backup_cfg]

command: bash /home/pi/printer_data/config/scripts/mygitbackup.sh
timeout: 60
verbose: True

    
#####################################################################
[gcode_macro _DUMPVARS] ; dump all klipper variables to help in macros
#####################################################################

gcode:
  {% set filter_name =  params.NAME|default('')|string|lower %}
  {% set filter_value = params.VALUE|default('')|string|lower %}
  {% set show_cfg =     params.SHOW_CFG|default(0)|int %}
    
  {% set out = [] %}

  {% for key1 in printer %}
    {% for key2 in printer[key1] %}
       {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
          {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
       {% endif %}
    {% else %}
       {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
          {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
       {% endif %}
    {% endfor %}
  {% endfor %}
    
  {action_respond_info(out|join("\n"))}

####################################################################
[gcode_macro CYCLE_MMU] 
#####################################################################

gcode:
  {% if printer.mmu is defined and printer.mmu.enabled %}
    {% if printer.extruder.can_extrude == True %}
       ;MMU_EJECT
       PARKFRONT
       M83      ; relative mode
       {% for gate in range(7, -1, -1) %}
          T{gate}
          G1 E20 F400
          G4 P500
       {% endfor %}
       MMU_UNLOAD
    {% else %}
       M118 WARNING: Hotend cant extrude - Aborted
    {% endif %}
  {% endif %}

####################################################################
[gcode_macro Ext_disable]
####################################################################
gcode:
    {% set state = params.STATE | default(0) | int %}
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE={state} 

